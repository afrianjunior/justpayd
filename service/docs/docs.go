// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/assignments": {
            "get": {
                "description": "Get all shift assignments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "List all assignments",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved assignments",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/assignments.AssignmentResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Assign a user to a shift",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Create a new assignment",
                "parameters": [
                    {
                        "description": "Assignment creation payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/assignments.CreateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Assignment created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/assignments.AssignmentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/assignments/{id}": {
            "put": {
                "description": "Change the user assigned to a shift",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "assignments"
                ],
                "summary": "Update assignment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Assignment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assignment update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/assignments.UpdateAssignmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Assignment updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/assignments.AssignmentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or assignment ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Assignment not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Authentication failed",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/shift_requests": {
            "get": {
                "description": "Admin gets all shift requests, can filter by status, user_id, and shift_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shift-requests"
                ],
                "summary": "List all shift requests",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by status (pending, approved, rejected)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by shift ID",
                        "name": "shift_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved shift requests",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shift_requests.ShiftRequestResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not an admin",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "User with role \"user\" creates shift request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shift-requests"
                ],
                "summary": "User creates shift request",
                "parameters": [
                    {
                        "description": "Shift request creation payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shift_requests.CreateShiftRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Shift request created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shift_requests.ShiftRequestResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/shift_requests/approve/{id}": {
            "put": {
                "description": "Admin approves shift request by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shift-requests"
                ],
                "summary": "Admin approves shift request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift request approved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shift_requests.ShiftRequestResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not an admin",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Shift request not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/shift_requests/reject/{id}": {
            "put": {
                "description": "Admin rejects shift request by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shift-requests"
                ],
                "summary": "Admin rejects shift request",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift Request ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift request rejected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shift_requests.ShiftRequestResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - Not an admin",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Shift request not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/shifts": {
            "get": {
                "description": "List semua shift",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "List semua shift",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved shifts",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/shifts.ShiftResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Admin creates shift",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "Admin creates shift",
                "parameters": [
                    {
                        "description": "Shift creation payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shifts.CreateShiftRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Shift created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shifts.ShiftResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/shifts/{id}": {
            "get": {
                "description": "Mendapatkan detail shift berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "Detail shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved shift detail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shifts.ShiftResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid shift ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Shift not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Mengedit shift berdasarkan ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "Edit shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Shift update payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/shifts.UpdateShiftRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/pkg.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/shifts.ShiftResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request payload or shift ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Shift not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Menghapus shift berdasarkan ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "shifts"
                ],
                "summary": "Hapus shift",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Shift ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shift deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid shift ID",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Shift not found",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/pkg.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "assignments.AssignmentResponse": {
            "type": "object",
            "properties": {
                "assigned_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "shift_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "assignments.CreateAssignmentRequest": {
            "type": "object",
            "required": [
                "shift_id",
                "user_id"
            ],
            "properties": {
                "shift_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "assignments.UpdateAssignmentRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "auth.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "user_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "pkg.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "shift_requests.CreateShiftRequestDTO": {
            "type": "object",
            "required": [
                "shift_id"
            ],
            "properties": {
                "shift_id": {
                    "type": "integer"
                }
            }
        },
        "shift_requests.ShiftRequestResponse": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "requested_at": {
                    "type": "string"
                },
                "shift_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                }
            }
        },
        "shifts.CreateShiftRequest": {
            "type": "object",
            "required": [
                "date",
                "end_time",
                "role",
                "start_time"
            ],
            "properties": {
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "shifts.ShiftResponse": {
            "type": "object",
            "properties": {
                "assignee": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_assigned": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "shifts.UpdateShiftRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "users.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "role"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and the JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "JustPayd API",
	Description:      "API for JustPayd services",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
